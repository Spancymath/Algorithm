package com.zhang.chapter4.section44;

/**
 *最短路径
 * 1.关键路径--最长路径（该路径上的任意任务启动延迟都会影响整个项目的完成时间）
 * 2.当且仅当加权有向图中至少存在一条从s到v的有向路径且所有从s到v的有向路径上的任意顶点都不存在于
 *   任何负权重环中时，s到v的最短路径才是存在的。
 * 3.Dijkstra: 就是广度优先搜索，初始化起点到所有顶点的距离为无穷，依次加入相邻顶点到队列，用加入的顶点松弛已有的距离
 * 4.Bellman-Ford: 初始化起点到所有顶点的距离为无穷，依次用边来松弛以有的距离
 * 5.SPFA：用队列优化Bellman-Ford, 过滤掉无用的松弛
 * 6.Floyed: 依次从所有顶点执行Bellman-Ford
 */
public class AnswerList {

}
